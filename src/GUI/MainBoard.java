/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import Model.Game;
import javax.swing.ImageIcon;

/**
 *
 * @author Spac3
 */
public class MainBoard extends javax.swing.JFrame {

    Game game = new Game();
    /**
     * Creates new form test
     */
    public Boolean selectFlag = false;
    public String fromhold;
    public String tohold;
    //blank
    public ImageIcon blank = new ImageIcon(getClass().getResource("/Resources/blank.jpg"));
    //team 1
    public ImageIcon Ma1 = new ImageIcon(getClass().getResource("/Resources/man_piece_left.jpg"));
    public ImageIcon Ki1 = new ImageIcon(getClass().getResource("/Resources/king_piece_left.jpg"));
    public ImageIcon Ge1 = new ImageIcon(getClass().getResource("/Resources/general_piece_left.jpg"));
    public ImageIcon Mi1 = new ImageIcon(getClass().getResource("/Resources/minister_piece_left.jpg"));
    public ImageIcon Lo1 = new ImageIcon(getClass().getResource("/Resources/fuedal_lord_left.jpg"));
    //team 2
    public ImageIcon Ma2 = new ImageIcon(getClass().getResource("/Resources/man_piece_right.jpg"));
    public ImageIcon Ki2 = new ImageIcon(getClass().getResource("/Resources/king_piece.jpg"));
    public ImageIcon Ge2 = new ImageIcon(getClass().getResource("/Resources/general_piece.jpg"));
    public ImageIcon Mi2 = new ImageIcon(getClass().getResource("/Resources/minister_piece.jpg"));
    public ImageIcon Lo2 = new ImageIcon(getClass().getResource("/Resources/fuedal_lord_right.jpg"));

    public MainBoard() {
        initComponents();
        setnames();
        game.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Board = new javax.swing.JLayeredPane();
        A1 = new javax.swing.JLabel();
        A2 = new javax.swing.JLabel();
        A3 = new javax.swing.JLabel();
        B1 = new javax.swing.JLabel();
        B2 = new javax.swing.JLabel();
        B3 = new javax.swing.JLabel();
        C1 = new javax.swing.JLabel();
        C2 = new javax.swing.JLabel();
        C3 = new javax.swing.JLabel();
        D1 = new javax.swing.JLabel();
        D2 = new javax.swing.JLabel();
        D3 = new javax.swing.JLabel();
        cap2 = new javax.swing.JLayeredPane();
        c2_1 = new javax.swing.JLabel();
        c2_2 = new javax.swing.JLabel();
        c2_3 = new javax.swing.JLabel();
        c2_4 = new javax.swing.JLabel();
        c2_5 = new javax.swing.JLabel();
        c2_6 = new javax.swing.JLabel();
        cap1 = new javax.swing.JLayeredPane();
        c1_1 = new javax.swing.JLabel();
        c1_2 = new javax.swing.JLabel();
        c1_3 = new javax.swing.JLabel();
        c1_4 = new javax.swing.JLabel();
        c1_5 = new javax.swing.JLabel();
        c1_6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new java.awt.Dimension(1920, 1080));
        setMinimumSize(new java.awt.Dimension(1920, 1080));
        setPreferredSize(new java.awt.Dimension(1920, 1080));
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Board.setPreferredSize(new java.awt.Dimension(818, 620));

        A1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/minister_piece_left.jpg"))); // NOI18N
        A1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        A1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                A1MouseClicked(evt);
            }
        });

        A2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/king_piece_left.jpg"))); // NOI18N
        A2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                A2MouseClicked(evt);
            }
        });

        A3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/general_piece_left.jpg"))); // NOI18N
        A3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                A3MouseClicked(evt);
            }
        });

        B1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/blank.jpg"))); // NOI18N
        B1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                B1MouseClicked(evt);
            }
        });

        B2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/man_piece_left.jpg"))); // NOI18N
        B2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                B2MouseClicked(evt);
            }
        });

        B3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/blank.jpg"))); // NOI18N
        B3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                B3MouseClicked(evt);
            }
        });

        C1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/blank.jpg"))); // NOI18N
        C1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                C1MouseClicked(evt);
            }
        });

        C2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/man_piece_right.jpg"))); // NOI18N
        C2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                C2MouseClicked(evt);
            }
        });

        C3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/blank.jpg"))); // NOI18N
        C3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                C3MouseClicked(evt);
            }
        });

        D1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/general_piece.jpg"))); // NOI18N
        D1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                D1MouseClicked(evt);
            }
        });

        D2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/king_piece.jpg"))); // NOI18N
        D2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                D2MouseClicked(evt);
            }
        });

        D3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/minister_piece.jpg"))); // NOI18N
        D3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                D3MouseClicked(evt);
            }
        });

        Board.setLayer(A1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Board.setLayer(A2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Board.setLayer(A3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Board.setLayer(B1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Board.setLayer(B2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Board.setLayer(B3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Board.setLayer(C1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Board.setLayer(C2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Board.setLayer(C3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Board.setLayer(D1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Board.setLayer(D2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Board.setLayer(D3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout BoardLayout = new javax.swing.GroupLayout(Board);
        Board.setLayout(BoardLayout);
        BoardLayout.setHorizontalGroup(
            BoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BoardLayout.createSequentialGroup()
                .addGroup(BoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BoardLayout.createSequentialGroup()
                        .addComponent(A2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(B2))
                    .addGroup(BoardLayout.createSequentialGroup()
                        .addComponent(A1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(B1))
                    .addGroup(BoardLayout.createSequentialGroup()
                        .addComponent(A3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(B3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(C2)
                    .addComponent(C1)
                    .addComponent(C3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(D2)
                    .addComponent(D1)
                    .addComponent(D3))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        BoardLayout.setVerticalGroup(
            BoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BoardLayout.createSequentialGroup()
                .addGroup(BoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BoardLayout.createSequentialGroup()
                        .addGroup(BoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(A1)
                            .addComponent(B1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(BoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(BoardLayout.createSequentialGroup()
                                .addComponent(A2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(BoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(B3)
                                    .addComponent(A3)))
                            .addComponent(B2)))
                    .addGroup(BoardLayout.createSequentialGroup()
                        .addGroup(BoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(D1)
                            .addComponent(C1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(BoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(BoardLayout.createSequentialGroup()
                                .addComponent(C2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(C3))
                            .addGroup(BoardLayout.createSequentialGroup()
                                .addGap(156, 156, 156)
                                .addComponent(D3))
                            .addComponent(D2))))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        A1.getAccessibleContext().setAccessibleName("");
        A1.getAccessibleContext().setAccessibleDescription("");

        getContentPane().add(Board, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 340, 620, 470));

        c2_1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/blank.jpg"))); // NOI18N
        c2_1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c2_1MouseClicked(evt);
            }
        });

        c2_2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/blank.jpg"))); // NOI18N
        c2_2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c2_2MouseClicked(evt);
            }
        });

        c2_3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/blank.jpg"))); // NOI18N
        c2_3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c2_3MouseClicked(evt);
            }
        });

        c2_4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/blank.jpg"))); // NOI18N
        c2_4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c2_4MouseClicked(evt);
            }
        });

        c2_5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/blank.jpg"))); // NOI18N
        c2_5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c2_5MouseClicked(evt);
            }
        });

        c2_6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/blank.jpg"))); // NOI18N
        c2_6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c2_6MouseClicked(evt);
            }
        });

        cap2.setLayer(c2_1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        cap2.setLayer(c2_2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        cap2.setLayer(c2_3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        cap2.setLayer(c2_4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        cap2.setLayer(c2_5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        cap2.setLayer(c2_6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout cap2Layout = new javax.swing.GroupLayout(cap2);
        cap2.setLayout(cap2Layout);
        cap2Layout.setHorizontalGroup(
            cap2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cap2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(cap2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cap2Layout.createSequentialGroup()
                        .addComponent(c2_3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c2_6))
                    .addGroup(cap2Layout.createSequentialGroup()
                        .addGroup(cap2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(c2_2)
                            .addComponent(c2_1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(cap2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(c2_4)
                            .addComponent(c2_5))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        cap2Layout.setVerticalGroup(
            cap2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cap2Layout.createSequentialGroup()
                .addGap(0, 8, Short.MAX_VALUE)
                .addGroup(cap2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(c2_1)
                    .addComponent(c2_4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cap2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(c2_2)
                    .addComponent(c2_5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cap2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(c2_3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(c2_6, javax.swing.GroupLayout.Alignment.TRAILING)))
        );

        getContentPane().add(cap2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1410, 330, 310, 470));

        c1_1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/blank.jpg"))); // NOI18N
        c1_1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c1_1MouseClicked(evt);
            }
        });

        c1_2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/blank.jpg"))); // NOI18N
        c1_2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c1_2MouseClicked(evt);
            }
        });

        c1_3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/blank.jpg"))); // NOI18N
        c1_3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c1_3MouseClicked(evt);
            }
        });

        c1_4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/blank.jpg"))); // NOI18N
        c1_4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c1_4MouseClicked(evt);
            }
        });

        c1_5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/blank.jpg"))); // NOI18N
        c1_5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c1_5MouseClicked(evt);
            }
        });

        c1_6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/blank.jpg"))); // NOI18N
        c1_6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c1_6MouseClicked(evt);
            }
        });

        cap1.setLayer(c1_1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        cap1.setLayer(c1_2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        cap1.setLayer(c1_3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        cap1.setLayer(c1_4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        cap1.setLayer(c1_5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        cap1.setLayer(c1_6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout cap1Layout = new javax.swing.GroupLayout(cap1);
        cap1.setLayout(cap1Layout);
        cap1Layout.setHorizontalGroup(
            cap1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cap1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(cap1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cap1Layout.createSequentialGroup()
                        .addComponent(c1_3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c1_6))
                    .addGroup(cap1Layout.createSequentialGroup()
                        .addGroup(cap1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(c1_2)
                            .addComponent(c1_1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(cap1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(c1_4)
                            .addComponent(c1_5))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        cap1Layout.setVerticalGroup(
            cap1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cap1Layout.createSequentialGroup()
                .addGap(0, 8, Short.MAX_VALUE)
                .addGroup(cap1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(c1_1)
                    .addComponent(c1_4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cap1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(c1_2)
                    .addComponent(c1_5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cap1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(c1_3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(c1_6, javax.swing.GroupLayout.Alignment.TRAILING)))
        );

        getContentPane().add(cap1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 330, 310, 470));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel1.setText("12 Chess");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 110, 200, 100));

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        jLabel2.setText("Player 1 turn");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 290, 170, 40));

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButton1.setText("Rules");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 130, 60));

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButton2.setText("Exit");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1760, 10, 130, 60));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void spotUpdate(int x, int y, ImageIcon img){
        //y = 2------------------------------------------------------------------------------
        if (x == 0 && y == 2){
            A1.setIcon(img);
        }
        if (x == 1 && y == 2){
            B1.setIcon(img);
        }
        if (x == 2 && y == 2){
            C1.setIcon(img);
        }
        if (x == 3 && y == 2){
            D1.setIcon(img);
        }
        if (x == 4 && y == 2){
            c1_1.setIcon(img);
        }
        if (x == 5 && y == 2){
            c1_4.setIcon(img);
        }
        if (x == 6 && y == 2){
            c2_1.setIcon(img);
        }
        if (x == 7 && y == 2){
            c2_4.setIcon(img);
        }
        //y = 1 -----------------------------------------------------------------------------
        if (x == 0 && y == 1){
            A2.setIcon(img);
        }
        if (x == 1 && y == 1){
            B2.setIcon(img);
        }
        if (x == 2 && y == 1){
            C2.setIcon(img);
        }
        if (x == 3 && y == 1){
            D2.setIcon(img);
        }
        if (x == 4 && y == 1){
            c1_2.setIcon(img);
        }
        if (x == 5 && y == 1){
            c1_5.setIcon(img);
        }
        if (x == 6 && y == 1){
            c2_2.setIcon(img);
        }
        if (x == 7 && y == 1){
            c2_5.setIcon(img);
        }
        //y = 0 -----------------------------------------------------------------------------
        if (x == 0 && y == 0){
            A3.setIcon(img);
        }
        if (x == 1 && y == 0){
            B3.setIcon(img);
        }
        if (x == 2 && y == 0){
            C3.setIcon(img);
        }
        if (x == 3 && y == 0){
            D3.setIcon(img);
        }
        if (x == 4 && y == 0){
            c1_3.setIcon(img);
        }
        if (x == 5 && y == 0){
            c1_6.setIcon(img);
        }
        if (x == 6 && y == 0){
            c2_3.setIcon(img);
        }
        if (x == 7 && y == 0){
            c2_6.setIcon(img);
        }
    } 
    
    private void updateGUI(){
        ImageIcon holdimg;
        int win = game.checkWin();
        if(game.gturn() == 1){
            jLabel2.setText("Player 1 turn");
        }
        if(game.gturn() == 2){
            jLabel2.setText("Player 2 turn");
        }
        //---------------------WIN CHECK------------------------
        if(win == 1){
            new P1win().setVisible(true);
        }
        if(win == 2){
            new P2win().setVisible(true);
        }
        //---------------------WIN CHECK END--------------------
        for (int i = 2; i >= 0; i--){
            for (int j = 0; j <= 7; j++){
                if(game.board.board[i][j] != null){
                    String type = game.board.board[i][j].identify();
                    int team = game.board.board[i][j].getTeam();
                    
                    switch(type){
                        case "Man":
                            if(team == 1){
                                holdimg = Ma1;
                                spotUpdate(j, i, holdimg);
                            }
                            if(team == 2){
                                holdimg = Ma2;
                                spotUpdate(j,i,holdimg);
                            }
                            break;
                            
                        case "King":
                            if(team == 1){
                                holdimg = Ki1;
                                spotUpdate(j, i, holdimg);
                            }
                            if(team == 2){
                                holdimg = Ki2;
                                spotUpdate(j,i,holdimg);
                            }
                            break;
                            
                        case "General":
                            if(team == 1){
                                holdimg = Ge1;
                                spotUpdate(j, i, holdimg);
                            }
                            if(team == 2){
                                holdimg = Ge2;
                                spotUpdate(j,i,holdimg);
                            }
                            break;
                            
                        case "Minister":
                            if(team == 1){
                                holdimg = Mi1;
                                spotUpdate(j, i, holdimg);
                            }
                            if(team == 2){
                                holdimg = Mi2;
                                spotUpdate(j,i,holdimg);
                            }
                            break;
                            
                        case "Lord":
                            if(team == 1){
                                holdimg = Lo1;
                                spotUpdate(j, i, holdimg);
                            }
                            if(team == 2){
                                holdimg = Lo2;
                                spotUpdate(j,i,holdimg);
                            }
                            break;
                            
                        default:
                            break;
                    }
                }
                else{
                    holdimg = blank;
                    spotUpdate(j,i,holdimg);
                }
            }
        }
    }
    
    private void setnames(){
        A1.setName("A1");
        A2.setName("A2");
        A3.setName("A3");
        B1.setName("B1");
        B2.setName("B2");
        B3.setName("B3");
        C1.setName("C1");
        C2.setName("C2");
        C3.setName("C3");
        D1.setName("D1");
        D2.setName("D2");
        D3.setName("D3");
        c1_1.setName("1C1");
        c1_2.setName("1C2");
        c1_3.setName("1C3");
        c1_4.setName("1C4");
        c1_5.setName("1C5");
        c1_6.setName("1C6");
        c2_1.setName("2C1");
        c2_2.setName("2C2");
        c2_3.setName("2C3");
        c2_4.setName("2C4");
        c2_5.setName("2C5");
        c2_6.setName("2C6");
    }
    
    private void A1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_A1MouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON1){//left click button
            if(selectFlag == false){
                fromhold = A1.getName();
                selectFlag = true;
            }
            else if(selectFlag == true){
                tohold = A1.getName();
                if (game.gmove(fromhold, tohold)){
                    updateGUI();
                }
                else{
                    //invalid move notifying
                }
                selectFlag = false;
            }
        }
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON3){//right click button
            selectFlag = false;
            fromhold = null;
            tohold = null;
        }
    }//GEN-LAST:event_A1MouseClicked

    private void A2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_A2MouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON1){//left click button
            if(selectFlag == false){
                fromhold = A2.getName();
                selectFlag = true;
            }
            else if(selectFlag == true){
                tohold = A2.getName();
                if (game.gmove(fromhold, tohold)){
                    updateGUI();
                }
                else{
                    //invalid move notifying
                }
                selectFlag = false;
            }
        }
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON3){//right click button
            selectFlag = false;
            fromhold = null;
            tohold = null;
        }
    }//GEN-LAST:event_A2MouseClicked

    private void A3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_A3MouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON1){//left click button
            if(selectFlag == false){
                fromhold = A3.getName();
                selectFlag = true;
            }
            else if(selectFlag == true){
                tohold = A3.getName();
                if (game.gmove(fromhold, tohold)){
                    updateGUI();
                }
                else{
                    //invalid move notifying
                }
                selectFlag = false;
            }
        }
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON3){//right click button
            selectFlag = false;
            fromhold = null;
            tohold = null;
        }
    }//GEN-LAST:event_A3MouseClicked

    private void B1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_B1MouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON1){//left click button
            if(selectFlag == false){
                fromhold = B1.getName();
                selectFlag = true;
            }
            else if(selectFlag == true){
                tohold = B1.getName();
                if (game.gmove(fromhold, tohold)){
                    updateGUI();
                }
                else{
                    //invalid move notifying
                }
                selectFlag = false;
            }
        }
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON3){//right click button
            selectFlag = false;
            fromhold = null;
            tohold = null;
        }
    }//GEN-LAST:event_B1MouseClicked

    private void B2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_B2MouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON1){//left click button
            if(selectFlag == false){
                fromhold = B2.getName();
                selectFlag = true;
            }
            else if(selectFlag == true){
                tohold = B2.getName();
                if (game.gmove(fromhold, tohold)){
                    updateGUI();
                }
                else{
                    //invalid move notifying
                }
                selectFlag = false;
            }
        }
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON3){//right click button
            selectFlag = false;
            fromhold = null;
            tohold = null;
        }
    }//GEN-LAST:event_B2MouseClicked

    private void B3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_B3MouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON1){//left click button
            if(selectFlag == false){
                fromhold = B3.getName();
                selectFlag = true;
            }
            else if(selectFlag == true){
                tohold = B3.getName();
                if (game.gmove(fromhold, tohold)){
                    updateGUI();
                }
                else{
                    //invalid move notifying
                }
                selectFlag = false;
            }
        }
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON3){//right click button
            selectFlag = false;
            fromhold = null;
            tohold = null;
        }
    }//GEN-LAST:event_B3MouseClicked

    private void C1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_C1MouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON1){//left click button
            if(selectFlag == false){
                fromhold = C1.getName();
                selectFlag = true;
            }
            else if(selectFlag == true){
                tohold = C1.getName();
                if (game.gmove(fromhold, tohold)){
                    updateGUI();
                }
                else{
                    //invalid move notifying
                }
                selectFlag = false;
            }
        }
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON3){//right click button
            selectFlag = false;
            fromhold = null;
            tohold = null;
        }
    }//GEN-LAST:event_C1MouseClicked

    private void C2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_C2MouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON1){//left click button
            if(selectFlag == false){
                fromhold = C2.getName();
                selectFlag = true;
            }
            else if(selectFlag == true){
                tohold = C2.getName();
                if (game.gmove(fromhold, tohold)){
                    updateGUI();
                }
                else{
                    //invalid move notifying
                }
                selectFlag = false;
            }
        }
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON3){//right click button
            selectFlag = false;
            fromhold = null;
            tohold = null;
        }
    }//GEN-LAST:event_C2MouseClicked

    private void C3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_C3MouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON1){//left click button
            if(selectFlag == false){
                fromhold = C3.getName();
                selectFlag = true;
            }
            else if(selectFlag == true){
                tohold = C3.getName();
                if (game.gmove(fromhold, tohold)){
                    updateGUI();
                }
                else{
                    //invalid move notifying
                }
                selectFlag = false;
            }
        }
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON3){//right click button
            selectFlag = false;
            fromhold = null;
            tohold = null;
        }
    }//GEN-LAST:event_C3MouseClicked

    private void D1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_D1MouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON1){//left click button
            if(selectFlag == false){
                fromhold = D1.getName();
                selectFlag = true;
            }
            else if(selectFlag == true){
                tohold = D1.getName();
                if (game.gmove(fromhold, tohold)){
                    updateGUI();
                }
                else{
                    //invalid move notifying
                }
                selectFlag = false;
            }
        }
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON3){//right click button
            selectFlag = false;
            fromhold = null;
            tohold = null;
        }
    }//GEN-LAST:event_D1MouseClicked

    private void D2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_D2MouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON1){//left click button
            if(selectFlag == false){
                fromhold = D2.getName();
                selectFlag = true;
            }
            else if(selectFlag == true){
                tohold = D2.getName();
                if (game.gmove(fromhold, tohold)){
                    updateGUI();
                }
                else{
                    //invalid move notifying
                }
                selectFlag = false;
            }
        }
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON3){//right click button
            selectFlag = false;
            fromhold = null;
            tohold = null;
        }
    }//GEN-LAST:event_D2MouseClicked

    private void D3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_D3MouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON1){//left click button
            if(selectFlag == false){
                fromhold = D3.getName();
                selectFlag = true;
            }
            else if(selectFlag == true){
                tohold = D3.getName();
                if (game.gmove(fromhold, tohold)){
                    updateGUI();
                }
                else{
                    //invalid move notifying
                }
                selectFlag = false;
            }
        }
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON3){//right click button
            selectFlag = false;
            fromhold = null;
            tohold = null;
        }
    }//GEN-LAST:event_D3MouseClicked

    private void c2_1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c2_1MouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON1){//left click button
            if(selectFlag == false){
                fromhold = c2_1.getName();
                selectFlag = true;
            }
            else if(selectFlag == true){
                tohold = c2_1.getName();
                if (game.gmove(fromhold, tohold)){
                    updateGUI();
                }
                else{
                    //invalid move notifying
                }
                selectFlag = false;
            }
        }
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON3){//right click button
            selectFlag = false;
            fromhold = null;
            tohold = null;
        }
    }//GEN-LAST:event_c2_1MouseClicked

    private void c2_2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c2_2MouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON1){//left click button
            if(selectFlag == false){
                fromhold = c2_2.getName();
                selectFlag = true;
            }
            else if(selectFlag == true){
                tohold = c2_2.getName();
                if (game.gmove(fromhold, tohold)){
                    updateGUI();
                }
                else{
                    //invalid move notifying
                }
                selectFlag = false;
            }
        }
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON3){//right click button
            selectFlag = false;
            fromhold = null;
            tohold = null;
        }
    }//GEN-LAST:event_c2_2MouseClicked

    private void c2_3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c2_3MouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON1){//left click button
            if(selectFlag == false){
                fromhold = c2_3.getName();
                selectFlag = true;
            }
            else if(selectFlag == true){
                tohold = c2_3.getName();
                if (game.gmove(fromhold, tohold)){
                    updateGUI();
                }
                else{
                    //invalid move notifying
                }
                selectFlag = false;
            }
        }
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON3){//right click button
            selectFlag = false;
            fromhold = null;
            tohold = null;
        }
    }//GEN-LAST:event_c2_3MouseClicked

    private void c2_4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c2_4MouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON1){//left click button
            if(selectFlag == false){
                fromhold = c2_4.getName();
                selectFlag = true;
            }
            else if(selectFlag == true){
                tohold = c2_4.getName();
                if (game.gmove(fromhold, tohold)){
                    updateGUI();
                }
                else{
                    //invalid move notifying
                }
                selectFlag = false;
            }
        }
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON3){//right click button
            selectFlag = false;
            fromhold = null;
            tohold = null;
        }
    }//GEN-LAST:event_c2_4MouseClicked

    private void c2_5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c2_5MouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON1){//left click button
            if(selectFlag == false){
                fromhold = c2_5.getName();
                selectFlag = true;
            }
            else if(selectFlag == true){
                tohold = c2_5.getName();
                if (game.gmove(fromhold, tohold)){
                    updateGUI();
                }
                else{
                    //invalid move notifying
                }
                selectFlag = false;
            }
        }
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON3){//right click button
            selectFlag = false;
            fromhold = null;
            tohold = null;
        }
    }//GEN-LAST:event_c2_5MouseClicked

    private void c2_6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c2_6MouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON1){//left click button
            if(selectFlag == false){
                fromhold = c2_6.getName();
                selectFlag = true;
            }
            else if(selectFlag == true){
                tohold = c2_6.getName();
                if (game.gmove(fromhold, tohold)){
                    updateGUI();
                }
                else{
                    //invalid move notifying
                }
                selectFlag = false;
            }
        }
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON3){//right click button
            selectFlag = false;
            fromhold = null;
            tohold = null;
        }
    }//GEN-LAST:event_c2_6MouseClicked

    private void c1_6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c1_6MouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON1){//left click button
            if(selectFlag == false){
                fromhold = c1_6.getName();
                selectFlag = true;
            }
            else if(selectFlag == true){
                tohold = c1_6.getName();
                if (game.gmove(fromhold, tohold)){
                    updateGUI();
                }
                else{
                    //invalid move notifying
                }
                selectFlag = false;
            }
        }
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON3){//right click button
            selectFlag = false;
            fromhold = null;
            tohold = null;
        }
    }//GEN-LAST:event_c1_6MouseClicked

    private void c1_5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c1_5MouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON1){//left click button
            if(selectFlag == false){
                fromhold = c1_5.getName();
                selectFlag = true;
            }
            else if(selectFlag == true){
                tohold = c1_5.getName();
                if (game.gmove(fromhold, tohold)){
                    updateGUI();
                }
                else{
                    //invalid move notifying
                }
                selectFlag = false;
            }
        }
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON3){//right click button
            selectFlag = false;
            fromhold = null;
            tohold = null;
        }
    }//GEN-LAST:event_c1_5MouseClicked

    private void c1_4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c1_4MouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON1){//left click button
            if(selectFlag == false){
                fromhold = c1_4.getName();
                selectFlag = true;
            }
            else if(selectFlag == true){
                tohold = c1_4.getName();
                if (game.gmove(fromhold, tohold)){
                    updateGUI();
                }
                else{
                    //invalid move notifying
                }
                selectFlag = false;
            }
        }
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON3){//right click button
            selectFlag = false;
            fromhold = null;
            tohold = null;
        }
    }//GEN-LAST:event_c1_4MouseClicked

    private void c1_3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c1_3MouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON1){//left click button
            if(selectFlag == false){
                fromhold = c1_3.getName();
                selectFlag = true;
            }
            else if(selectFlag == true){
                tohold = c1_3.getName();
                if (game.gmove(fromhold, tohold)){
                    updateGUI();
                }
                else{
                    //invalid move notifying
                }
                selectFlag = false;
            }
        }
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON3){//right click button
            selectFlag = false;
            fromhold = null;
            tohold = null;
        }
    }//GEN-LAST:event_c1_3MouseClicked

    private void c1_2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c1_2MouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON1){//left click button
            if(selectFlag == false){
                fromhold = c1_2.getName();
                selectFlag = true;
            }
            else if(selectFlag == true){
                tohold = c1_2.getName();
                if (game.gmove(fromhold, tohold)){
                    updateGUI();
                }
                else{
                    //invalid move notifying
                }
                selectFlag = false;
            }
        }
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON3){//right click button
            selectFlag = false;
            fromhold = null;
            tohold = null;
        }
    }//GEN-LAST:event_c1_2MouseClicked

    private void c1_1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c1_1MouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON1){//left click button
            if(selectFlag == false){
                fromhold = c1_1.getName();
                selectFlag = true;
            }
            else if(selectFlag == true){
                tohold = c1_1.getName();
                if (game.gmove(fromhold, tohold)){
                    updateGUI();
                }
                else{
                    //invalid move notifying
                }
                selectFlag = false;
            }
        }
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON3){//right click button
            selectFlag = false;
            fromhold = null;
            tohold = null;
        }
    }//GEN-LAST:event_c1_1MouseClicked

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON3){//right click button
            selectFlag = false;
            fromhold = null;
            tohold = null;
        }
    }//GEN-LAST:event_formMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        new rulesScreen().setVisible(true);
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainBoard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel A1;
    private javax.swing.JLabel A2;
    private javax.swing.JLabel A3;
    private javax.swing.JLabel B1;
    private javax.swing.JLabel B2;
    private javax.swing.JLabel B3;
    private javax.swing.JLayeredPane Board;
    private javax.swing.JLabel C1;
    private javax.swing.JLabel C2;
    private javax.swing.JLabel C3;
    private javax.swing.JLabel D1;
    private javax.swing.JLabel D2;
    private javax.swing.JLabel D3;
    private javax.swing.JLabel c1_1;
    private javax.swing.JLabel c1_2;
    private javax.swing.JLabel c1_3;
    private javax.swing.JLabel c1_4;
    private javax.swing.JLabel c1_5;
    private javax.swing.JLabel c1_6;
    private javax.swing.JLabel c2_1;
    private javax.swing.JLabel c2_2;
    private javax.swing.JLabel c2_3;
    private javax.swing.JLabel c2_4;
    private javax.swing.JLabel c2_5;
    private javax.swing.JLabel c2_6;
    private javax.swing.JLayeredPane cap1;
    private javax.swing.JLayeredPane cap2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
